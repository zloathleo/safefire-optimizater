import Mock, { Random } from 'mockjs';
import FetchMock from 'fetch-mock';

// 配置需要mock的路由

//////////////////////////////////////heat chart data
// let heatChartdata = [[0, 0, 5], [0, 1, 1], [0, 2, 0], [0, 3, 0], [0, 4, 0], [0, 5, 0], [0, 6, 0], [0, 7, 0], [0, 8, 0], [0, 9, 0], [0, 10, 0], [0, 11, 2], [0, 12, 4], [0, 13, 1], [0, 14, 1], [0, 15, 3], [0, 16, 4], [0, 17, 6], [0, 18, 4], [0, 19, 4],
// [1, 0, 7], [1, 1, 0], [1, 2, 0], [1, 3, 0], [1, 4, 0], [1, 5, 0], [1, 6, 0], [1, 7, 0], [1, 8, 0], [1, 9, 0], [1, 10, 5], [1, 11, 2], [1, 12, 2], [1, 13, 6], [1, 14, 9], [1, 15, 11], [1, 16, 6], [1, 17, 7], [1, 18, 8], [1, 19, 12],
// [2, 0, 1], [2, 1, 1], [2, 2, 0], [2, 3, 0], [2, 4, 0], [2, 5, 0], [2, 6, 0], [2, 7, 0], [2, 8, 0], [2, 9, 0], [2, 10, 3], [2, 11, 2], [2, 12, 1], [2, 13, 9], [2, 14, 8], [2, 15, 10], [2, 16, 6], [2, 17, 5], [2, 18, 5], [2, 19, 5],
// [3, 0, 7], [3, 1, 3], [3, 2, 0], [3, 3, 0], [3, 4, 0], [3, 5, 0], [3, 6, 0], [3, 7, 0], [3, 8, 1], [3, 9, 0], [3, 10, 5], [3, 11, 4], [3, 12, 7], [3, 13, 14], [3, 14, 13], [3, 15, 12], [3, 16, 9], [3, 17, 5], [3, 18, 5], [3, 19, 10],
// [4, 0, 1], [4, 1, 3], [4, 2, 0], [4, 3, 0], [4, 4, 0], [4, 5, 1], [4, 6, 0], [4, 7, 0], [4, 8, 0], [4, 9, 2], [4, 10, 4], [4, 11, 4], [4, 12, 2], [4, 13, 4], [4, 14, 4], [4, 15, 14], [4, 16, 12], [4, 17, 1], [4, 18, 8], [4, 19, 5],
// [5, 0, 2], [5, 1, 1], [5, 2, 0], [5, 3, 3], [5, 4, 0], [5, 5, 0], [5, 6, 0], [5, 7, 0], [5, 8, 2], [5, 9, 0], [5, 10, 4], [5, 11, 1], [5, 12, 5], [5, 13, 10], [5, 14, 5], [5, 15, 7], [5, 16, 11], [5, 17, 6], [5, 18, 0], [5, 19, 5],
// [6, 0, 1], [6, 1, 0], [6, 2, 0], [6, 3, 0], [6, 4, 0], [6, 5, 0], [6, 6, 0], [6, 7, 0], [6, 8, 0], [6, 9, 0], [6, 10, 1], [6, 11, 0], [6, 12, 2], [6, 13, 1], [6, 14, 3], [6, 15, 4], [6, 16, 0], [6, 17, 0], [6, 18, 0], [6, 19, 0],

// [7, 0, 1], [7, 1, 0], [7, 2, 10], [7, 3, 0], [7, 4, 0], [7, 5, 0], [7, 6, 0], [7, 7, 0], [7, 8, 11], [7, 9, 0], [7, 10, 1], [7, 11, 0], [7, 12, 2], [7, 13, 1], [7, 14, 3], [7, 15, 4], [7, 16, 0], [7, 17, 0], [7, 18, 0], [7, 19, 0],
// [8, 0, 1], [8, 1, 0], [8, 2, 0], [8, 3, 10], [8, 4, 0], [8, 5, 0], [8, 6, 0], [8, 7, 0], [8, 8, 0], [8, 9, 12], [8, 10, 1], [8, 11, 0], [8, 12, 2], [8, 13, 1], [8, 14, 3], [8, 15, 4], [8, 16, 0], [8, 17, 0], [8, 18, 0], [8, 19, 0],
// [9, 0, 1], [9, 1, 0], [9, 2, 0], [9, 3, 0], [9, 4, 10], [9, 5, 0], [9, 6, 0], [9, 7, 0], [9, 8, 0], [9, 9, 13], [9, 10, 1], [9, 11, 0], [9, 12, 2], [9, 13, 1], [9, 14, 3], [9, 15, 4], [9, 16, 0], [9, 17, 0], [9, 18, 0], [9, 19, 0],
// [10, 0, 1], [10, 1, 0], [10, 2, 0], [10, 3, 0], [10, 4, 0], [10, 5, 7], [10, 6, 0], [10, 7, 10], [10, 8, 0], [10, 9, 0], [10, 10, 1], [10, 11, 0], [10, 12, 2], [10, 13, 1], [10, 14, 3], [10, 15, 4], [10, 16, 0], [10, 17, 0], [10, 18, 0], [10, 19, 0],

// ]; 

FetchMock.mock('/heatchart', function () {
    let heatChartdata = [];
    heatChartdata[0] = [0, 0, 1];
    for (let i = 0; i < 20; i++) {
        for (let j = 0; j < 20; j++) {
            let _index = i * 20 + j;
            if (_index > 0) {
                let _lv = heatChartdata[_index - 1][2];
                if (_lv < 10) {
                    // heatChartdata[i * 20 + j] = [i, j, _lv + Math.floor((Math.random() * 2) + 1)]; 
                    let _r = Math.ceil(Math.random() * 4) - 2;
                    heatChartdata[i * 20 + j] = [i, j, _lv + _r];

                } else {
                    heatChartdata[i * 20 + j] = [i, j, Math.floor((Math.random() * 15) + 1)];
                }
            }
        }
    }
    return Mock.mock({
        'data': heatChartdata,
    });
});



//////////////////////////////////////trend chart data


FetchMock.mock('/trendchart', function () {
    let base = +new Date(2017, 9, 3);
    let oneDay = 24 * 3600 * 1000;
    let time = [];
    let data = [Math.random() * 300];

    data[0] = 1300;

    for (var i = 1; i < 200; i++) {
        var now = new Date(base += oneDay);
        time.push([now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'));
        data.push(Math.round((Math.random() - 0.5) * 200 + data[i - 1]));
    }

    return Mock.mock({
        'data': data,
        'time': time,
    });
});

// 其他路由使用原生fetch，这段代码必须放最后
FetchMock.once('*', (url, options) => {
    FetchMock.restore();
    return fetch(url, options);
});